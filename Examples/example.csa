.asm_name Example
.stack 500

; Global variable example
.global field : i32

func main:
	push 5
	pop field
	
	push "\"Hello World!\""  ; Text printing example
	print.n

	call method          ; Method calling example

	.local result : i32  ; Local variable usage example
	call typemethod
	pop result

	; String interpolation example
	.local args : ~arr:obj,1
	push args
	push result
	stelem 0

	push args
	interp "result: {0}"
	print.n

	push args
	call divmethod
	stelem 0
	
	push "25.0 / 5.2 = {0}"
	pop $a

	push args
	interp $a
	print.n
	
	; Carry example
	push 151
	pop $a

	push args
	push $a
	stelem 0

	push args
	interp "Accumulator before ROR: 0x{0:X4}"
	print.n
	
	push $a
	ror
	pop $a

	push args
	push $a
	stelem 0

	push args
	interp "Accumulator after ROR: 0x{0:X4}"
	print.n

	push args
	push $f.c
	stelem 0

	push args
	interp "Carry flag: {0}"
	print.n
	
	call branchmethod
	
	exit
end

.hide	
func method:
	.local args : ~arr:obj,1
	push args
	push 15
	push 25
	add
	stelem 0

	push args
	interp "15 + 25 = {0}"
	print.n
	ret
end

.hide
func typemethod:
	push field
	dup
	mul
	ret
end

.hide
func divmethod:
	push 25.0f
	push 5.2f
	div
	ret
end

.hide
func branchmethod:
	; Jumping/branching example
	.local counter : i32

	; Loop from 1 to 10
	push 1
	pop $a
	lda counter
	push 10
	pop $a

	.local args : ~arr:obj,1
.lbl loop
	; Print the current number
	push args
	push counter
	interp "{0}"
	print

	; Exit the loop if the counter == the accumulator
	push $a
	push counter
	comp
	push $f.o
	brtrue loopEnd
	
	inc counter

	push ", "
	print
	br loop

.lbl loopEnd
	push "\n"
	print
	ret
end